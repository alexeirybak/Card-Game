{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAI0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI,kEAAoB,MAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI,kEAAoB,MAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW,gBAAgB,WAAW,iBAAiB,YAAY;AACtG,wDAAwD,WAAW;AACnE,0DAA0D,YAAY;AACtE;AACA,6DAA6D,YAAY;AACzE,wDAAwD,WAAW;AACnE,sDAAsD,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAkB;AAC9B,YAAY,4DAAS;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,kBAAkB;AAClB,uCAAuC,sCAAsC;AAC7E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kEAAoB;AAC1D;AACA;AACA;AACA,gBAAgB,gEAAkB;AAClC;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;;;;;;;;;;;;;;;;;;ACpL+C;AAC/C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU,IAAI,UAAU,IAAI,UAAU;AACxD;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,YAAY,IAAI,YAAY;AAC9E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAW;AACvB,UAAU;AACV;AACA;AACA,KAAK;AACL;;;;;;;UC1DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNa;AACb;AAC8C;AAC9C;AACA,2DAAS","sources":["webpack://course3/./src/screen-card.js","webpack://course3/./src/screen-start.js","webpack://course3/webpack/bootstrap","webpack://course3/webpack/runtime/define property getters","webpack://course3/webpack/runtime/hasOwnProperty shorthand","webpack://course3/webpack/runtime/make namespace object","webpack://course3/./src/index.js"],"sourcesContent":["import {\r\n    currentSelectedLevel,\r\n    screenFirstElement,\r\n    getScreen,\r\n} from \"./screen-start.js\"\r\n\r\nlet selectedCards = []\r\nlet numberOfPairs = 0\r\nconst cardSymbols = [\"spades\", \"hearts\", \"diamonds\", \"clubs\"]\r\nconst cardValues = [\"A\", \"K\", \"Q\", \"J\", \"10\", \"9\", \"8\", \"7\", \"6\"]\r\nconst cardDeck = []\r\n\r\nconst screenAllCards = document.getElementById(\"begin\")\r\n\r\nexport function renderCards() {\r\n    screenAllCards.style.display = \"block\"\r\n    const screenCards = `\r\n      <div class=\"top\">\r\n        <div class=\"time\">\r\n          <div class=\"time-text\">\r\n            <div class=\"min\">min</div>\r\n            <div class=\"sec\">sec</div> \r\n          </div>\r\n          <div class=\"time-figures\">00.00</div>\r\n        </div>\r\n        <button class=\"begin\">Начать заново</button>\r\n      </div>\r\n      <div class=\"cards\">\r\n        <div class=\"card-deck-row1\"></div> \r\n        <div class=\"card-deck-row2\"></div>\r\n      </div>`\r\n\r\n    screenAllCards.innerHTML = screenCards\r\n\r\n    for (let i = 0; i < cardSymbols.length; i++) {\r\n        for (let j = 0; j < cardValues.length; j++) {\r\n            let card = {\r\n                symbol: cardSymbols[i],\r\n                value: cardValues[j],\r\n            }\r\n            cardDeck.push(card)\r\n        }\r\n    }\r\n\r\n    const shuffledCards = cardDeck.sort(() => Math.random() - 0.5)\r\n    let topDeck = '<div class=\"row\">'\r\n    const cardsArray = []\r\n    for (let i = 0; i < currentSelectedLevel * 3; i++) {\r\n        let card = shuffledCards[i]\r\n        cardsArray.push(card)\r\n        topDeck += createCardElement(card)\r\n    }\r\n    topDeck += `</div>`\r\n    document.querySelector(\".card-deck-row1\").innerHTML = topDeck\r\n\r\n    let lowDeck = '<div class=\"row\">'\r\n    const cardsRowLow = cardsArray.sort(() => Math.random() - 0.5)\r\n    for (let i = 0; i < currentSelectedLevel * 3; i++) {\r\n        let card = cardsRowLow[i]\r\n        lowDeck += createCardElement(card)\r\n    }\r\n    lowDeck += `</div>`\r\n    document.querySelector(\".card-deck-row2\").innerHTML = lowDeck\r\n    function createCardElement(card) {\r\n        return `<div class=\"card ${card.value}\" data-value=\"${card.value}\" data-symbol=\"${card.symbol}.svg\">\r\n                    <div class=\"symbol-top-left\"><div>${card.value}</div>\r\n                    <div class=\"block-symbol\"><img src=\"${card.symbol}.svg\"></div>\r\n                </div>\r\n                <div class=\"value-center my-svg\"><img src=\"${card.symbol}.svg\"></div>\r\n                <div class=\"symbol-bottom-right\"><div>${card.value}</div>\r\n                <div class=\"block-symbol\"><img src=\"${card.symbol}.svg\"></div></div></div>`\r\n    }\r\n\r\n    function changeCardStyle() {\r\n        const cardFrontElements = document.querySelectorAll(\".card\")\r\n\r\n        cardFrontElements.forEach((cardFrontElement) => {\r\n            cardFrontElement\r\n                .querySelectorAll(\r\n                    \".value-center, .symbol-top-left, .symbol-bottom-right\"\r\n                )\r\n                .forEach((element) => {\r\n                    element.style.display = \"none\"\r\n                })\r\n            cardFrontElement.classList.add(\"selected\")\r\n            selectedCards = []\r\n        })\r\n    }\r\n\r\n    setTimeout(changeCardStyle, 5000)\r\n\r\n    function addRestartButtonListener() {\r\n        const restartButton = document.querySelector(\".begin\")\r\n        restartButton.addEventListener(\"click\", (event) => {\r\n            selectedCards = []\r\n            event.preventDefault()\r\n            screenAllCards.style.display = \"none\"\r\n            screenFirstElement.style.display = \"flex\"\r\n            getScreen()\r\n        })\r\n    }\r\n    addRestartButtonListener()\r\n\r\n    function choiceCard() {\r\n        const cardFrontElements = document.querySelectorAll(\".card\")\r\n\r\n        cardFrontElements.forEach((cardFrontElement) => {\r\n            cardFrontElement.addEventListener(\"click\", (event) => {\r\n                event.stopPropagation()\r\n                cardFrontElement.classList.remove(\"selected\")\r\n                cardFrontElement\r\n                    .querySelectorAll(\r\n                        \".value-center, .symbol-top-left, .symbol-bottom-right\"\r\n                    )\r\n                    .forEach((element) => {\r\n                        element.style.display = \"block\"\r\n                    })\r\n\r\n                const valueCard = cardFrontElement.dataset.value\r\n                const symbolCard = cardFrontElement.dataset.symbol\r\n\r\n                if (selectedCards.length < 2) {\r\n                    selectedCards.push({\r\n                        value: valueCard,\r\n                        symbol: symbolCard,\r\n                    })\r\n                } else {\r\n                    selectedCards = [{ value: valueCard, symbol: symbolCard }]\r\n                }\r\n\r\n                if (selectedCards.length === 2) {\r\n                    compareCards()\r\n                }\r\n            })\r\n        })\r\n    }\r\n    choiceCard()\r\n}\r\n\r\nfunction compareCards() {\r\n    const selectedCard1 = selectedCards[0]\r\n    const selectedCard2 = selectedCards[1]\r\n    if (\r\n        selectedCard1.value === selectedCard2.value &&\r\n        selectedCard1.symbol === selectedCard2.symbol\r\n    ) {\r\n        setTimeout(() => {\r\n            ++numberOfPairs\r\n            selectedCards = []\r\n\r\n            if (numberOfPairs / 3 === currentSelectedLevel) {\r\n                numberOfPairs = 0\r\n                selectedCards.splice(0, 2)\r\n                screenAllCards.style.display = \"none\"\r\n                screenFirstElement.style.display = \"flex\"\r\n\r\n                alert(\"Вы победили!\")\r\n            }\r\n        }, 300)\r\n    } else {\r\n        setTimeout(() => {\r\n            selectedCards.splice(0, 2)\r\n            showAllCards()\r\n            alert(\"Вы проиграли!\")\r\n        }, 300)\r\n    }\r\n}\r\n\r\nfunction showAllCards() {\r\n    const cardFrontElements = document.querySelectorAll(\".card\")\r\n    cardFrontElements.forEach((cardFrontElement) => {\r\n        cardFrontElement.classList.remove(\"selected\")\r\n        cardFrontElement\r\n            .querySelectorAll(\r\n                \".value-center, .symbol-top-left, .symbol-bottom-right\"\r\n            )\r\n            .forEach((element) => {\r\n                element.style.display = \"block\"\r\n            })\r\n    })\r\n}\r\n","import { renderCards } from './screen-card.js';\r\n\r\n// ---------- Рендерим первую страницу ----------------------------------------\r\nexport const screenFirstElement = document.querySelector('.front');\r\n\r\nconst screenStart = `<form class=\"form-block\">\r\n                            <p class=\"level-choice\">Выбери сложность</p>\r\n                                <div class=\"level\" id=\"levels\"></div>\r\n                                <button type=\"submit\" class=\"button-start\">Старт</button>\r\n                    </form>`;\r\n\r\nscreenFirstElement.innerHTML = screenStart;\r\n\r\nconst levels = [{ level: 1 }, { level: 2 }, { level: 3 }];\r\n\r\nexport let currentSelectedLevel = null;\r\nconst listLevels = document.getElementById('levels');\r\nconst form = document.querySelector('.form-block');\r\n\r\nexport const getScreen = () => {\r\n    screenFirstElement.classList.add('front');\r\n    // ---------- Рендерим уровни -------------------------------------------------\r\n    const renderLevels = () => {\r\n        const levelsHtml = levels\r\n            .map((level) => {\r\n                return `<label class=\"level\">\r\n        <input type=\"radio\" name=\"level\" value=\"${level.level}\">${level.level}</label>`;\r\n            })\r\n            .join('');\r\n        listLevels.innerHTML = levelsHtml;\r\n    };\r\n    renderLevels();\r\n\r\n    // ---------- Выбираем уровень ------------------------------------------------\r\n    const radioButtons = document.querySelectorAll('input[type=\"radio\"]');\r\n    radioButtons.forEach((radioButton) => {\r\n        radioButton.addEventListener('change', () => {\r\n            radioButtons.forEach((btn) => {\r\n                if (btn !== radioButton) {\r\n                    btn.parentElement.classList.remove('chosen-level');\r\n                }\r\n            });\r\n            radioButton.parentElement.classList.add('chosen-level');\r\n            currentSelectedLevel = radioButton;\r\n        });\r\n    });\r\n\r\n    form.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n        const checkedLevel = event.target.elements.level.value;\r\n        if (checkedLevel) {\r\n            currentSelectedLevel = parseInt(checkedLevel);\r\n            screenFirstElement.style.display = 'none';\r\n            renderCards();\r\n        } else {\r\n            alert('Выберите уровень');\r\n        }\r\n    });\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\nimport { getScreen } from './screen-start.js';\r\n\r\ngetScreen();\r\n"],"names":[],"sourceRoot":""}